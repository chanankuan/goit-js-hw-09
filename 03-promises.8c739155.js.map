{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAsBpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,uBAAqBN,QAAiBC,OAE5CM,EAAK,sBAAoBP,QAAeC,MAAU,GAErDA,EAAM,G,CA9BbL,EAAKa,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMV,EAAQL,EAAKgB,SAAS,GAAGC,MAC7BC,EAAOlB,EAAKgB,SAAS,GAAGC,MACxBE,EAASnB,EAAKgB,SAAS,GAAGC,MAE5B,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CACnBjB,EAAciB,EAAGC,OAAOhB,GAASgB,OAAOH,IAASE,EAAI,IAClEE,MAAKC,IACJzB,EAAA0B,OAAOC,QAAQF,EAAO,IAEvBG,OAAMC,IACL7B,EAAA0B,OAAOI,QAAQD,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const delay = form.elements[0].value,\n    step = form.elements[1].value,\n    amount = form.elements[2].value;\n\n  for (let i = 1; i <= amount; i += 1) {\n    const promise = createPromise(i, Number(delay) + Number(step) * (i - 1))\n      .then(result => {\n        Notify.success(result);\n      })\n      .catch(error => {\n        Notify.failure(error);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","elements","value","step","amount","i","Number","then","result","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.8c739155.js.map"}